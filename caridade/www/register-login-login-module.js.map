{"version":3,"sources":["webpack:///./src/app/register/login/login.module.ts","webpack:///./src/app/register/login/login.page.html","webpack:///./src/app/register/login/login.page.scss","webpack:///./src/app/register/login/login.page.ts"],"names":[],"mappings":"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","file":"register-login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { RegisterService } from '../../services/api/register.service';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  providers: [\n    RegisterService\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"<ion-content padding class=”loginPage” scroll=”false”>\\n  <div padding id=\\\"login-layer\\\">\\n    <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"localizaUsuario()\\\" autocomplete=”off” >\\n      <ion-row align-items-center>\\n        <ion-col>\\n          <ion-avatar>\\n            <ion-img src=\\\"/assets/slides/tour/tour-yellow.svg\\\"></ion-img>\\n          </ion-avatar>\\n          <ion-note color=\\\"medium\\\">\\n            <br />\\n            Olá vamos acessar seu cadastro ?\\n            <br />\\n            <br />\\n            Basta informar seu e-mail, o mesmo utilizado no seu cadastro.\\n          </ion-note>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-list inset>\\n\\n            <ion-item>\\n              <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Email</ion-label>\\n              <ion-input type=\\\"text\\\" placeholder=\\\"Informe seu email\\\" formControlName=\\\"email\\\" required></ion-input>\\n            </ion-item>\\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n\\n        <div class=\\\"footer\\\">\\n\\t\\t\\t\\t\\t<ion-button expand=\\\"block\\\" class=\\\"cta\\\" color=\\\"orange\\\" type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\">PRÓXIMO</ion-button>\\n\\t\\t\\t\\t</div>\\n\\n    </form>\\n  </div>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, FormGroup, FormGroupDirective, FormBuilder, NgForm, Validators } from '@angular/forms';\nimport { RegisterService } from '../../services/api/register.service';\nimport { DatabaseService } from \"../../services/database/database.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  public user: any;\n\n  loginForm: FormGroup;\n\n  constructor(\n    public alertController: AlertController,\n    public router: Router,\n    public route: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    public dataBase :DatabaseService,\n    public registerAPI: RegisterService) {\n\n      this.loginForm = this.formBuilder.group({\n        email : ['', Validators.compose([Validators.required]) ]\n      });\n     }\n\n  ngOnInit() {\n  }\n\n  localizaUsuario(): void {\n    this.registerAPI.findUser(this.loginForm.value.email)    \n      .subscribe( (res: any) => {\n        if ( parseInt(res.codigo) === 0 ){\n        console.log(\"antes do findUser\");\n        this.user = JSON.parse(JSON.stringify(res.dadosUsuario));\n        console.log(\"pos do findUser\");\n        console.log(\"gravando no store\");\n        this.dataBase.removeKey('NSL');\n        this.dataBase.setKeyValue('NSL',res.dadosUsuario);\n        console.log(res.dadosUsuario);\n        this.router.navigate(['home']);\n        } else {\n          this.showAlert('Atenção', res.mensagem.texto);\n        }\n      }, err => {\n        console.log(err);\n        this.router.navigate(['']);\n      });\n  }\n\n  showAlert(header, message) {\n    const alert: any = this.alertController.create({\n        header: header,\n        message: message,\n        buttons: ['OK']\n    });\n\n    alert.then((_alert: any)=> {\n        _alert.present();\n    })\n}\n\n}\n"],"sourceRoot":""}